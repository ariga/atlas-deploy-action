name: CI (Go)
on:
  push:
  workflow_dispatch:
jobs:
  golangci-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run Go linters
        uses: golangci/golangci-lint-action@v3
        with:
          args: --timeout=15m --verbose --enable whitespace,gocritic,goimports,revive
          skip-pkg-cache: true
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: |
          curl -sSf 'https://atlasgo.sh?test=1' | env ATLAS_DEBUG=true sh
      - name: Run tests
        run: |
          go test -race ./...
  integration-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./.github/workflows/Dockerfile
          tags: local
          load: true
      - run: docker images
      - name: sanity
        uses: ./internal/action
        with:
          url: sqlite://file.db
          dir: ./internal/testdata/migrations
      - run: |
          curl -sSf 'https://atlasgo.sh?test=1' | env ATLAS_DEBUG=true sh
          atlas migrate status --url sqlite://file.db --dir file://./internal/testdata/migrations
          output=$(atlas migrate status --url sqlite://file.db --dir file://./internal/testdata/migrations)
          if [[ "$output" == *"Already at latest version"* ]]; then
            echo "OK"
          else
            echo "Expected 'Already at latest version', got '$output'"
            exit 1
          fi
  docker:
    runs-on: ubuntu-latest
    needs: [golangci-lint, unit-tests, integration-tests]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: ./.github/workflows/Dockerfile
          tags: arigaio/atlas-deploy-action:latest